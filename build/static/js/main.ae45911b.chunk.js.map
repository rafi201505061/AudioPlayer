{"version":3,"sources":["useInterval.js","Components/SimpleCard.js","Components/SongList.js","Context/CreateContext.js","Context/SongContext.js","Components/Card.js","Components/Home.js","Context/ViewportContext.js","Components/AudioPlayer.js","App.js","reportWebVitals.js","index.js"],"names":["useInterval","callback","delay","savedCallback","useRef","useEffect","current","id","setInterval","clearInterval","SimpleCard","makeStyles","inline","display","avatar","borderColor","name","imageUrl","onClick","isActive","style","backgroundColor","borderRadius","margin","ListItem","alignItems","justifyContent","src","height","width","alignSelf","border","fontSize","color","useStyles","theme","root","maxWidth","SongList","data","classes","List","className","map","item","songName","isPlaying","reducer","actions","initialValue","Context","createContext","Provider","children","useReducer","state","dispatch","boundActions","key","value","CreateContext","action","type","songs","forEach","payload","push","currentTime","currentDuration","playing","currentVolume","volume","isAudioPlayerActive","selectSong","playPause","setCurrentDuration","setCurrentTime","setVolume","setAudioPlayer","require","rootC","flexDirection","flex","details","content","controls","paddingLeft","spacing","paddingBottom","playIcon","bar","slider","marginRight","withRouter","history","useTheme","useState","progress","setProgress","audioPlayerRef","React","forcedProgress","setForcedProgress","isFirst","setFirst","useContext","songSelection","id_current_song","prev_or_next","dividend","divisor","console","log","play","pause","duration","currentSong","filter","ref","Card","window","innerHeight","alt","CardContent","Grid","container","xs","Typography","component","variant","fontWeight","Button","sm","Slider","onChange","event","newVal","aria-labelledby","IconButton","aria-label","direction","newValue","innerWidth","windowSize","setWindowSize","handleChange","addEventListener","removeEventListener","minimizedPlayer","zIndex","button","smallButton","album_art","AudioPlayer","setIsPlaying","prevVolume","setPrevVolume","isMute","setIsMute","ViewportContext","nameFontSize","setNameFontSize","handleMute","prev","CssBaseline","Box","boxShadow","md","justify","alignContent","gutterBottom","marginTop","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ae45911b.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nfunction useInterval(callback, delay) {\r\n  const savedCallback = useRef();\r\n\r\n  // Remember the latest callback.\r\n  useEffect(() => {\r\n    savedCallback.current = callback;\r\n  }, [callback]);\r\n\r\n  // Set up the interval.\r\n  useEffect(() => {\r\n    function tick() {\r\n      savedCallback.current();\r\n    }\r\n    if (delay !== null) {\r\n      let id = setInterval(tick, delay);\r\n      return () => clearInterval(id);\r\n    }\r\n  }, [delay]);\r\n}\r\n export default useInterval;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { borders } from '@material-ui/system';\r\nimport ListItem from '@material-ui/core/ListItem';\r\n\r\nconst useStyles = makeStyles({\r\n  inline: {\r\n    display: 'inline',\r\n  },\r\n  avatar: {\r\n    borderColor: 'red'\r\n  }\r\n});\r\n\r\nconst SimpleCard = ({ name, imageUrl, onClick, isActive }) => {\r\n  return (\r\n    <div onClick={onClick} style={{ backgroundColor: isActive ? '#fcc0f0' : 'white',borderRadius:15,margin:2.5 }}>\r\n      <ListItem alignItems=\"flex-start\" justifyContent=\"center\">\r\n\r\n        <img src={imageUrl} style={{height:40,width:40,borderRadius:80,alignSelf:'center',border:'2px solid #0893a6',margin:10}}/>\r\n        \r\n        <h4 style={{alignSelf:'center',fontSize:16,color:\"#0893a6\"}}>{name}</h4>\r\n      </ListItem>\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nexport default SimpleCard;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport SimpleCard from './SimpleCard';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    height: '100%',\r\n    maxWidth: '36ch',\r\n    backgroundColor: '#e4eced'\r\n  }\r\n}));\r\n\r\nconst SongList = ({data,onClick}) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <List className={classes.root}>\r\n      {\r\n        data.map(item=><div key={item.id}><SimpleCard\r\n            name={item.songName}\r\n            imageUrl={item.imageUrl}\r\n            onClick={()=>onClick(item.id)}\r\n            isActive={item.isPlaying}\r\n          />\r\n        </div>)\r\n      }\r\n      \r\n    </List>\r\n  );\r\n}\r\nexport default SongList;\r\n","\r\nimport React,{ createContext, useReducer } from 'react';\r\nconst CreateContext = (reducer, actions, initialValue) => {\r\n\r\n  const Context = createContext();\r\n\r\n  const Provider = ({ children }) => {\r\n    const [state, dispatch] = useReducer(reducer, initialValue);\r\n    const boundActions = [];\r\n    for (let key in actions) {\r\n      boundActions[key] = actions[key](dispatch);\r\n    }\r\n    return <Context.Provider value={{ state, ...boundActions }}>\r\n      {children}\r\n    </Context.Provider>\r\n  }\r\n\r\n  return { Context, Provider };\r\n}\r\nexport default CreateContext;","import CreateContext from './CreateContext';\r\nlet songsData = require('../data/songs.json');\r\n\r\nconst Mod = (dividend, divisor) => {\r\n  if (dividend < 0) {\r\n    return (dividend + divisor);\r\n  } else {\r\n    return dividend % divisor;\r\n  }\r\n}\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'select_song':\r\n      var songs = [];\r\n      state.songs.forEach(item => {\r\n        if (action.payload.id !== item.id) {\r\n          songs.push({ ...item, isPlaying: false })\r\n        } else {\r\n          songs.push({ ...item, isPlaying: true })\r\n        }\r\n      })\r\n      return {\r\n        ...state,\r\n        songs,\r\n        currentTime: 0,\r\n        currentDuration: 0\r\n      };\r\n    case 'play_or_pause':\r\n      return { ...state, playing: !state.playing };\r\n    case 'set_current_volume':\r\n      return {\r\n        ...state,\r\n        currentVolume:action.payload.volume\r\n      }\r\n    case 'set_current_time':\r\n      return {\r\n        ...state,\r\n        currentTime:action.payload.currentTime\r\n      }\r\n    case 'set_duration':\r\n      return {\r\n        ...state,\r\n        currentDuration:action.payload.currentDuration\r\n      }\r\n    case 'activate_audio_player':\r\n      return {\r\n        ...state,\r\n        isAudioPlayerActive:true\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nconst selectSong = (dispatch) => {\r\n  return (id)=>{\r\n    dispatch({type:'select_song',payload:{id}})\r\n  }\r\n}\r\n\r\nconst playPause = (dispatch) => {\r\n  return () => {\r\n    dispatch({type:'play_or_pause'})\r\n  }\r\n}\r\n\r\nconst setCurrentTime = (dispatch) => {\r\n  return (currentTime)=>{\r\n    dispatch({type:'set_current_time',payload:{currentTime}})\r\n  }\r\n}\r\n\r\nconst setVolume = (dispatch) => {\r\n  return (volume)=>{\r\n    dispatch({type:'set_current_volume',payload:{volume}})\r\n  }\r\n}\r\n\r\nconst setCurrentDuration = (dispatch) => {\r\n  return (currentDuration)=>{\r\n    dispatch({type:'set_duration',payload:{currentDuration}})\r\n  }\r\n}\r\n\r\nconst setAudioPlayer = (dispatch)=>{\r\n  return ()=>{\r\n    dispatch({type:'activate_audio_player'})\r\n  }\r\n}\r\nexport const { Context, Provider } = CreateContext(\r\n  reducer,\r\n  {selectSong,playPause,setCurrentDuration,setCurrentTime,setVolume,setAudioPlayer},\r\n  {\r\n    songs: songsData.songs,\r\n    playing: false,\r\n    currentTime: 0,\r\n    currentVolume: 100,\r\n    currentDuration: 0,\r\n    isAudioPlayerActive:false\r\n  }\r\n)","import React, { useState, useEffect, useContext } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\r\nimport PauseIcon from '@material-ui/icons/Pause';\r\nimport useInterval from '../useInterval';\r\nimport SongList from './SongList';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport VolumeDown from '@material-ui/icons/VolumeDown';\r\nimport { Context } from '../Context/SongContext';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  rootC: {\r\n    display: 'flex',\r\n    flexDirection: 'row'\r\n  },\r\n  root: {\r\n    flex: 1\r\n  },\r\n  details: {\r\n    flex: 2\r\n  },\r\n  content: {\r\n    flex: '1 0 auto',\r\n  },\r\n  controls: {\r\n    alignItems: 'center',\r\n    paddingLeft: theme.spacing(1),\r\n    paddingBottom: theme.spacing(1),\r\n  },\r\n  playIcon: {\r\n    height: 38,\r\n    width: 38,\r\n  },\r\n  bar: {\r\n    justifyContent: 'center'\r\n  },\r\n  slider: {\r\n    marginRight: 3\r\n  }\r\n}));\r\n\r\n\r\nconst MediaControlCard = ({ history }) => {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [progress, setProgress] = useState(0);\r\n  const audioPlayerRef = React.useRef(null);\r\n  const [forcedProgress, setForcedProgress] = useState(0);\r\n  const [isFirst, setFirst] = useState(true);\r\n\r\n  const { state, playPause, selectSong, setCurrentDuration, setCurrentTime, setVolume, setAudioPlayer } = useContext(Context);\r\n  useEffect(() => {\r\n    setProgress(state.currentTime / (state.currentDuration));\r\n  }, [])\r\n  const Mod = (dividend, divisor) => {\r\n    if (dividend < 0) {\r\n      return (dividend + divisor);\r\n    } else {\r\n      return dividend % divisor;\r\n    }\r\n  }\r\n  const songSelection = (id_current_song, prev_or_next) => {\r\n    console.log(\"title:\" + state.songs[id_current_song].songName);\r\n    console.log(\"url:\" + state.songs[id_current_song].src);\r\n    console.log(\"elapsed time:\" + audioPlayerRef.current.currentTime);\r\n    selectSong(Mod(id_current_song + prev_or_next, 5));\r\n  }\r\n  useEffect(() => {\r\n    if (audioPlayerRef && audioPlayerRef.current) {\r\n\r\n      if (state.playing) {\r\n        audioPlayerRef.current.play();\r\n      } else {\r\n        audioPlayerRef.current.pause();\r\n      }\r\n    }\r\n  }\r\n    , [state.playing])\r\n  useEffect(() => {\r\n    if (audioPlayerRef && audioPlayerRef.current) {\r\n      if (state.playing) {\r\n        audioPlayerRef.current.play();\r\n      } else {\r\n        audioPlayerRef.current.pause();\r\n      }\r\n    }\r\n  }\r\n    , [state.songs])\r\n\r\n  useEffect(() => {\r\n    if (audioPlayerRef && audioPlayerRef.current) {\r\n      audioPlayerRef.current.volume = state.currentVolume / 100;\r\n    }\r\n  }, [state.currentVolume])\r\n\r\n  useEffect(() => {\r\n    if (audioPlayerRef && audioPlayerRef.current) {\r\n      if (isFirst) {\r\n        audioPlayerRef.current.currentTime = state.currentTime;\r\n        audioPlayerRef.current.currentDuration = state.currentDuration;\r\n        setFirst(false);\r\n      } else {\r\n        audioPlayerRef.current.currentTime = (forcedProgress / 100) * (state.currentDuration);\r\n        setProgress(((audioPlayerRef.current.currentTime / audioPlayerRef.current.duration) * 100));\r\n        setCurrentTime(audioPlayerRef.current.currentTime);\r\n        setCurrentDuration(audioPlayerRef.current.duration);\r\n      }\r\n\r\n    }\r\n  }, [forcedProgress]);\r\n  useInterval(() => {\r\n    if (audioPlayerRef && audioPlayerRef.current) {\r\n      if (isFirst) {\r\n        audioPlayerRef.current.currentTime = state.currentTime;\r\n        audioPlayerRef.current.currentDuration = state.currentDuration;\r\n        setFirst(false);\r\n      } else {\r\n        setProgress((audioPlayerRef.current.currentTime / audioPlayerRef.current.duration) * 100);\r\n        setCurrentTime(audioPlayerRef.current.currentTime);\r\n        setCurrentDuration(audioPlayerRef.current.duration);\r\n      }\r\n\r\n    }\r\n  }, 200);\r\n\r\n  const setTime = (val) => {\r\n    const min = (val / 60).toFixed(0).toString();\r\n    const second = (val % 60).toFixed(0).toString();\r\n    return min + \":\" + second;\r\n  }\r\n\r\n  const handleVolume = (event, newValue) => {\r\n    setVolume(newValue);\r\n  };\r\n\r\n\r\n  const currentSong = state.songs.filter(item => item.isPlaying === true)[0];\r\n  return (\r\n    <div className={classes.rootC}>\r\n      <div style={{ flex: 1, borderRadius: 5 }}>\r\n        <audio\r\n          ref={audioPlayerRef}\r\n          src={currentSong.src}\r\n          type=\"audio/mp3\"\r\n        />\r\n        <Card className={classes.root}>\r\n          <div>\r\n            <img\r\n              style={{ width: '95%', height: window.innerHeight * .73, flex: 1 }}\r\n              src={currentSong.imageUrl}\r\n              alt={currentSong.songName}\r\n\r\n            />\r\n          </div>\r\n          <div className={classes.details}>\r\n            <CardContent className={classes.content}>\r\n              <Grid container spacing={1}>\r\n                <Grid item xs>\r\n                  <Typography component=\"h4\" variant=\"h4\" style={{ fontWeight: 'bold', color: '#d900bd' }}>\r\n                    {currentSong.songName}\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item xs>\r\n                  <Button variant=\"contained\" color=\"secondary\" onClick={() => {\r\n                    setAudioPlayer();\r\n                    history.push('/');\r\n                  }}>\r\n                    Minimize Audio Player\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n            </CardContent>\r\n            <Grid container spacing={1} className={classes.bar}>\r\n              <Grid item xs={12} sm={12}>\r\n                <Slider value={progress} onChange={(event, newVal) => setForcedProgress(newVal)} aria-labelledby=\"continuous-slider\" style={{ margin: 10 }} />\r\n              </Grid>\r\n              {/* <Grid item xs={12} sm={1} className={classes.bar}>\r\n                {setTime(currentTime)}/{setTime(duration)}\r\n              </Grid> */}\r\n            </Grid>\r\n\r\n            <Grid container className={classes.controls}>\r\n              <Grid item xs={8}>\r\n                <IconButton aria-label=\"previous\" onClick={() => {\r\n                  songSelection(currentSong.id, -1);\r\n                }}>\r\n                  {theme.direction === 'rtl' ? <SkipNextIcon style={{ color: '#d900bd' }} /> : <SkipPreviousIcon style={{ color: '#d900bd' }} />}\r\n                </IconButton>\r\n                <IconButton aria-label=\"play/pause\" onClick={() => playPause()}>\r\n                  {\r\n                    state.playing\r\n                      ? <PauseIcon className={classes.playIcon} style={{ color: '#d900bd' }} />\r\n                      : <PlayArrowIcon className={classes.playIcon} style={{ color: '#d900bd' }} />\r\n                  }\r\n                </IconButton>\r\n                <IconButton aria-label=\"next\" onClick={() => {\r\n                  songSelection(currentSong.id, 1);\r\n                }}>\r\n                  {theme.direction === 'rtl' ? <SkipPreviousIcon style={{ color: '#d900bd' }} /> : <SkipNextIcon style={{ color: '#d900bd' }} />}\r\n                </IconButton>\r\n              </Grid>\r\n\r\n              <Grid item xs={4} style={{ width: 400, alignItems: 'center', justifyContent: 'center' }}>\r\n                <Grid container spacing={1}>\r\n                  <Grid item xs={2}>\r\n                    <VolumeDown />\r\n                  </Grid>\r\n                  <Grid item xs={10}>\r\n                    <Slider value={state.currentVolume} onChange={handleVolume} aria-labelledby=\"continuous-slider\" className={classes.slider} />\r\n                  </Grid>\r\n                </Grid>\r\n\r\n              </Grid>\r\n            </Grid>\r\n          </div>\r\n\r\n        </Card>\r\n      </div>\r\n      <div style={{ flex: .2 }}>\r\n        <SongList\r\n          data={state.songs}\r\n          onClick={(id) => {\r\n            selectSong(id);\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n\r\n  );\r\n}\r\nexport default withRouter(MediaControlCard);","import React, { useContext, useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Context } from '../Context/SongContext';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\r\nimport PauseIcon from '@material-ui/icons/Pause';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport VolumeDown from '@material-ui/icons/VolumeDown';\r\nimport useInterval from '../useInterval';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  rootC: {\r\n    display: 'flex',\r\n    flexDirection: 'row'\r\n  },\r\n  root: {\r\n    flex: 1\r\n  },\r\n  details: {\r\n    flex: 2\r\n  },\r\n  content: {\r\n    flex: '1 0 auto',\r\n  },\r\n  controls: {\r\n    alignItems: 'center',\r\n    paddingLeft: theme.spacing(1),\r\n    paddingBottom: theme.spacing(1),\r\n  },\r\n  playIcon: {\r\n    height: 38,\r\n    width: 38,\r\n  },\r\n  bar: {\r\n    justifyContent: 'center'\r\n  },\r\n  slider: {\r\n    marginRight: 3\r\n  }\r\n}));\r\n\r\nconst Home = () => {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const { state, playPause, selectSong,\r\n    setCurrentDuration, setCurrentTime, setVolume } = useContext(Context);\r\n  const [progress, setProgress] = useState(0);\r\n  const audioPlayerRef = React.useRef(null);\r\n  const [forcedProgress, setForcedProgress] = useState(0);\r\n  const [isFirst, setFirst] = useState(true);\r\n  console.log(\"ini\", state.currentTime);\r\n  useEffect(() => {\r\n    setProgress(state.currentTime / (state.currentDuration));\r\n  }, [])\r\n  const Mod = (dividend, divisor) => {\r\n    if (dividend < 0) {\r\n      return (dividend + divisor);\r\n    } else {\r\n      return dividend % divisor;\r\n    }\r\n  }\r\n  const songSelection = (id_current_song, prev_or_next) => {\r\n    console.log(\"title:\" + state.songs[id_current_song].songName);\r\n    console.log(\"url:\" + state.songs[id_current_song].src);\r\n    console.log(\"elapsed time:\" + audioPlayerRef.current.currentTime);\r\n    selectSong(Mod(id_current_song + prev_or_next, 5));\r\n  }\r\n  useEffect(() => {\r\n    if (audioPlayerRef && audioPlayerRef.current) {\r\n\r\n      if (state.playing) {\r\n        audioPlayerRef.current.play();\r\n      } else {\r\n        audioPlayerRef.current.pause();\r\n      }\r\n    }\r\n  }\r\n    , [state.playing])\r\n  useEffect(() => {\r\n    if (audioPlayerRef && audioPlayerRef.current) {\r\n      if (state.playing) {\r\n        audioPlayerRef.current.play();\r\n      } else {\r\n        audioPlayerRef.current.pause();\r\n      }\r\n    }\r\n  }\r\n    , [state.songs])\r\n\r\n  useEffect(() => {\r\n    if (audioPlayerRef && audioPlayerRef.current) {\r\n      audioPlayerRef.current.volume = state.currentVolume / 100;\r\n    }\r\n  }, [state.currentVolume])\r\n\r\n  useEffect(() => {\r\n    if (audioPlayerRef && audioPlayerRef.current) {\r\n      if (isFirst) {\r\n        audioPlayerRef.current.currentTime = state.currentTime;\r\n        audioPlayerRef.current.currentDuration = state.currentDuration;\r\n        setFirst(false);\r\n      } else {\r\n        audioPlayerRef.current.currentTime = (forcedProgress / 100) * (state.currentDuration);\r\n        setProgress(((audioPlayerRef.current.currentTime / audioPlayerRef.current.duration) * 100));\r\n        setCurrentTime(audioPlayerRef.current.currentTime);\r\n        setCurrentDuration(audioPlayerRef.current.duration);\r\n      }\r\n\r\n    }\r\n  }, [forcedProgress]);\r\n  useInterval(() => {\r\n    if (audioPlayerRef && audioPlayerRef.current) {\r\n      if (isFirst) {\r\n        audioPlayerRef.current.currentTime = state.currentTime;\r\n        audioPlayerRef.current.currentDuration = state.currentDuration;\r\n        setFirst(false);\r\n      } else {\r\n        setProgress((audioPlayerRef.current.currentTime / audioPlayerRef.current.duration) * 100);\r\n        setCurrentTime(audioPlayerRef.current.currentTime);\r\n        setCurrentDuration(audioPlayerRef.current.duration);\r\n      }\r\n\r\n    }\r\n  }, 200);\r\n\r\n  const setTime = (val) => {\r\n    const min = (val / 60).toFixed(0).toString();\r\n    const second = (val % 60).toFixed(0).toString();\r\n    return min + \":\" + second;\r\n  }\r\n\r\n  const handleVolume = (event, newValue) => {\r\n    setVolume(newValue);\r\n  };\r\n\r\n\r\n  const currentSong = state.songs.filter(item => item.isPlaying === true)[0];\r\n  return (\r\n    <div>\r\n    <div height={800}>\r\n    <h1>\r\n        Hello! This is a music player app.To use the music player click <Link to='/musicplayer'>Here</Link>\r\n      </h1>\r\n    </div>\r\n      \r\n      {\r\n        state.isAudioPlayerActive\r\n          ? <div>\r\n            <audio\r\n              ref={audioPlayerRef}\r\n              src={currentSong.src}\r\n              type=\"audio/mp3\"\r\n            />\r\n            <Card className={classes.root}>\r\n              <div className={classes.details}>\r\n                <CardContent className={classes.content}>\r\n                  <Typography component=\"h4\" variant=\"h4\" style={{ fontWeight: 'bold', color: '#d900bd' }}>\r\n                    {currentSong.songName}\r\n                  </Typography>\r\n                </CardContent>\r\n                <Grid container spacing={1} className={classes.bar}>\r\n                  <Grid item xs={12} sm={12}>\r\n                    <Slider value={progress} onChange={(event, newVal) => setForcedProgress(newVal)} aria-labelledby=\"continuous-slider\" style={{ margin: 10 }} />\r\n                  </Grid>\r\n                  {/* <Grid item xs={12} sm={1} className={classes.bar}>\r\n                {setTime(currentTime)}/{setTime(duration)}\r\n              </Grid> */}\r\n                </Grid>\r\n\r\n                <Grid container className={classes.controls}>\r\n                  <Grid item xs={8}>\r\n                    <IconButton aria-label=\"previous\" onClick={() => {\r\n                      songSelection(currentSong.id, -1);\r\n                    }}>\r\n                      {theme.direction === 'rtl' ? <SkipNextIcon style={{ color: '#d900bd' }} /> : <SkipPreviousIcon style={{ color: '#d900bd' }} />}\r\n                    </IconButton>\r\n                    <IconButton aria-label=\"play/pause\" onClick={() => playPause()}>\r\n                      {\r\n                        state.playing\r\n                          ? <PauseIcon className={classes.playIcon} style={{ color: '#d900bd' }} />\r\n                          : <PlayArrowIcon className={classes.playIcon} style={{ color: '#d900bd' }} />\r\n                      }\r\n                    </IconButton>\r\n                    <IconButton aria-label=\"next\" onClick={() => {\r\n                      songSelection(currentSong.id, 1);\r\n                    }}>\r\n                      {theme.direction === 'rtl' ? <SkipPreviousIcon style={{ color: '#d900bd' }} /> : <SkipNextIcon style={{ color: '#d900bd' }} />}\r\n                    </IconButton>\r\n                  </Grid>\r\n\r\n                  <Grid item xs={4} style={{ width: 400, alignItems: 'center', justifyContent: 'center' }}>\r\n                    <Grid container spacing={1}>\r\n                      <Grid item xs={2}>\r\n                        <VolumeDown />\r\n                      </Grid>\r\n                      <Grid item xs={10}>\r\n                        <Slider value={state.currentVolume} onChange={handleVolume} aria-labelledby=\"continuous-slider\" className={classes.slider} />\r\n                      </Grid>\r\n                    </Grid>\r\n\r\n                  </Grid>\r\n                </Grid>\r\n              </div>\r\n            </Card>\r\n          </div>\r\n          : null\r\n      }\r\n\r\n    </div>\r\n  )\r\n}\r\nexport default Home;","import React, { createContext, useState, useEffect } from 'react';\r\n\r\nconst Context = createContext({});\r\n\r\nconst Provider = ({ children }) => {\r\n  const [windowSize, setWindowSize] = useState({\r\n    height: window.innerHeight,\r\n    width: window.innerWidth\r\n  })\r\n  const handleChange = () => {\r\n    setWindowSize({\r\n      height: window.innerHeight,\r\n      width: window.innerWidth\r\n    })\r\n  }\r\n  useEffect(() => {\r\n    window.addEventListener('resize', handleChange);\r\n    return ()=>window.removeEventListener('resize',handleChange);\r\n  }, [])\r\n  return <Context.Provider value={{windowSize}}>\r\n    {children}\r\n  </Context.Provider>\r\n}\r\n\r\nexport {Context,Provider};","import React, { useState, Fragment, useContext, useEffect } from 'react';\r\nimport { CssBaseline, Grid, IconButton, Slider, Box, Typography, Hidden } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Pause, VolumeDown } from '@material-ui/icons';\r\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\r\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\r\nimport { Context as ViewportContext } from '../Context/ViewportContext';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n   minimizedPlayer: {\r\n      backgroundColor: '#fcedf2',\r\n      margin: 0,\r\n      zIndex: 1,\r\n      flex: 1\r\n   },\r\n   button: {\r\n      color: '#ad0031',\r\n      fontSize: 35\r\n   },\r\n   smallButton: {\r\n      color: '#ad0031',\r\n      fontSize: 20\r\n   },\r\n   album_art: {\r\n      height: '96%',\r\n      width: '96%'\r\n   }\r\n})\r\nconst AudioPlayer = () => {\r\n   const classes = useStyles();\r\n   const [isPlaying, setIsPlaying] = useState(false);\r\n   const [prevVolume, setPrevVolume] = useState(100);\r\n   const [volume, setVolume] = useState(100);\r\n   const [isMute, setIsMute] = useState(false);\r\n   const { windowSize } = useContext(ViewportContext);\r\n   const [nameFontSize, setNameFontSize] = useState(14);\r\n\r\n\r\n   useEffect(() => {\r\n      if (windowSize.width < 1200)\r\n         setNameFontSize(10);\r\n      else if (windowSize.width >= 1200 && windowSize.width < 1400) {\r\n         setNameFontSize(12)\r\n      }\r\n      else\r\n         setNameFontSize(14);\r\n   }, [windowSize]);\r\n\r\n   const handleMute = () => {\r\n      setIsMute(prev => !prev);\r\n      if (!isMute) {\r\n         setPrevVolume(volume);\r\n         setVolume(0);\r\n      } else {\r\n         setVolume(prevVolume);\r\n      }\r\n   }\r\n   const handleVolumeChange = (event, newVal) => {\r\n      setVolume(newVal);\r\n      if (newVal === 0) {\r\n         setIsMute(true);\r\n         setPrevVolume(volume);\r\n      } else {\r\n         setIsMute(false);\r\n      }\r\n   }\r\n\r\n   return <Fragment>\r\n      <CssBaseline />\r\n      <Box component={Grid} container boxShadow={3} className={classes.minimizedPlayer}>\r\n         <Grid container style={{ flex: 1 }}>\r\n            <Grid container item xs={2} md={2} justify='center' alignContent='center' style={{ backgroundColor: '#ad0031' }}  >\r\n               <img src=\"https://i.ytimg.com/vi/VJ52yJwN_K0/maxresdefault.jpg\" alt=\"album\" className={classes.album_art} />\r\n            </Grid>\r\n            <Grid item container xs={10} md={10} justify='space-between' direction='column'>\r\n               <Grid container item xs={12} justify='center'>\r\n                  <Typography variant=\"button\" display=\"block\" gutterBottom style={{ color: '#ad0031', fontWeight: 'bold', fontSize: nameFontSize }}>\r\n                     Cheap Thrills\r\n                        </Typography>\r\n               </Grid>\r\n               <Grid container item xs={12} >\r\n                  <Grid item xs={1} />\r\n                  <Grid item container xs={10}>\r\n                     <Slider\r\n                        value={60}\r\n                        style={{ color: '#ad0031' }}\r\n                        aria-labelledby=\"continuous-slider\"\r\n                     />\r\n                  </Grid>\r\n                  <Grid item xs={1} />\r\n               </Grid>\r\n               <Grid container item xs={12} justify='space-around' alignItems='center'>\r\n                  {/* control panel */}\r\n                  <Grid container item xs={7} justify='flex-end'>\r\n                     {/* previous button */}\r\n                     <Grid container item xs={4} justify='flex-end'>\r\n                        <IconButton style={{ color: '#ad0031' }}>\r\n                           <SkipPreviousIcon className={classes.smallButton} />\r\n                        </IconButton>\r\n                     </Grid>\r\n                     {/* play or pause */}\r\n                     <Grid item xs={4}>\r\n                        <IconButton style={{ color: '#ad0031' }} onClick={() => setIsPlaying(prev => !prev)}>\r\n                           {\r\n                              isPlaying\r\n                                 ? <Pause className={classes.button} />\r\n                                 : <PlayArrowIcon className={classes.button} />\r\n                           }\r\n                        </IconButton>\r\n                     </Grid>\r\n                     {/* next button */}\r\n                     <Grid container item xs={4} justify='flex-start'>\r\n                        <IconButton style={{ color: '#ad0031' }}>\r\n                           <SkipNextIcon />\r\n                        </IconButton>\r\n                     </Grid>\r\n                  </Grid>\r\n                  {/* volume control */}\r\n                  <Grid item xs={5} container alignItems='flex-start' justify='center' spacing={4}>\r\n                     {/* volume icon */}\r\n                     <Grid item container xs={2} sm={1} md={1} justify='center'>\r\n                        {\r\n                           isMute\r\n                              ? <VolumeOffIcon onClick={handleMute} style={{ fontSize: 20, color: '#ad0031', marginTop: 4 }} />\r\n                              : <VolumeDown onClick={handleMute} style={{ fontSize: 20, color: '#ad0031', marginTop: 4 }} />\r\n                        }\r\n                     </Grid>\r\n                     {/* volume slider */}\r\n                     <Grid item container xs={5} sm={6} md={6} justify='center'>\r\n                        <Slider\r\n                           value={volume}\r\n                           style={{ color: '#ad0031' }}\r\n                           onChange={handleVolumeChange}\r\n                           aria-labelledby=\"continuous-slider\"\r\n                        />\r\n                     </Grid>\r\n                  </Grid>\r\n               </Grid>\r\n            </Grid>\r\n         </Grid>\r\n      </Box>\r\n   </Fragment>\r\n\r\n}\r\n\r\nexport default AudioPlayer;","import './App.css';\nimport Card from './Components/Card';\nimport Home from './Components/Home';\nimport AudioPlayer from './Components/AudioPlayer';\nimport { Switch, Route } from 'react-router-dom';\nimport { Provider } from './Context/SongContext';\nimport { Provider as ViewportProvider } from './Context/ViewportContext';\n\n\nfunction App() {\n  return (\n    <ViewportProvider>\n      <Provider>\n        <div className=\"App\">\n          <Switch>\n            <Route component={AudioPlayer} exact path='/' />\n            <Route component={Card} exact path='/musicplayer' />\n          </Switch>\n        </div>\n      </Provider>\n    </ViewportProvider>\n\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom'\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}